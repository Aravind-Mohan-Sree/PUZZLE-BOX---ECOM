<!-- ------------------------------- styles -------------------------------- -->
<style>
  .order-container {
    flex-grow: 1;
    padding-top: 6.25rem;
    padding-bottom: 2.875rem;
  }

  .card-stepper {
    z-index: 0
  }

  .swal-css .swal2-popup {
    color: rgb(255, 255, 255);
    background-color: rgba(51, 45, 45, .75);
    backdrop-filter: blur(8px);
    border-radius: 1.5rem;
  }

  .swal-css .swal2-confirm {
    color: rgb(51, 45, 45);
    background-color: rgb(255, 255, 255);
  }

  .swal-css .swal2-cancel {
    color: rgb(51, 45, 45);
    background-color: rgb(255, 255, 255);
  }

  .swal-css .swal2-input {
    box-shadow: none;
    border-color: rgb(255, 255, 255);
  }

  details {
    display: inline-block;
    position: relative;
    margin: 10px;
  }

  summary {
    list-style: none;
    cursor: pointer;
    color: #2563eb;
  }

  summary::-webkit-details-marker {
    display: none;
  }

  .tooltip-content {
    position: absolute;
    background: #333;
    color: white;
    padding: 8px 12px;
    border-radius: 4px;
    width: max-content;
    z-index: 1000;
    font-size: 14px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    /* Right positioning */
    left: 100%;
    top: 50%;
    transform: translateY(-50%);
    margin-left: 8px;
  }

  details[open] .tooltip-content {
    animation: simpleFade 0.15s ease-out;
  }

  @keyframes simpleFade {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  .tooltip-content::before {
    content: '';
    position: absolute;
    right: 100%;
    top: 50%;
    transform: translateY(-50%);
    border: 6px solid transparent;
    border-right-color: #333;
  }
</style>
<!-- ----------------------------------------------------------------------- -->

<!-- --------------------------- navbar included --------------------------- -->
<%- include('navbar') %>
<!-- ----------------------------------------------------------------------- -->

<!-- --------------------------- sidenav included --------------------------- -->
<%- include('sidenav') %>
<!-- ----------------------------------------------------------------------- -->

<!-- -------------------------- order container -------------------------- -->
<div class="order-container container" id="content">
  <h2 class="ms-4 ms-md-0 pe-5 text-sm-end me-sm-5">ADD PRODUCT</h2>

  <hr>

  <!-- ----------------------- order details section ----------------------- -->
  <section>
    <div class=" px-4 px-sm-2 pt-md-3 mb-5">
      <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-md-10 col-lg-8">
          <% let totalPriceWithoutDiscount = 0 %>
          <div class="card card-stepper mb-4" style="border-radius: 16px;">
            <div class="card-header p-4">
              <div class="d-flex justify-content-between align-items-center">
                <div>
                  <p class="text-muted mb-2 text-truncate"> Order ID: <span class="fw-bold text-body"><%= order._id %></span></p>
                  <p class="text-muted mb-0"> Place On <span class="fw-bold text-body"><%= new Date(order.createdAt).toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' }) %></span> </p>
                </div>
              </div>
            </div>
            <div class="card-body p-4 pb-0">
              <% order.products.forEach((product,index,array)=> { %>
              <% totalPriceWithoutDiscount += product.price * product.quantity %>
              <div class="d-flex flex-row mb-2 mb-lg-0 pb-2">
                <div class="flex-fill">
                  <p class="h5"><%= product.productName %></p>
                  <p class="text-muted"> Qt: <%= product.quantity %></p>
                  <% if (product.status === 'Pending-Return') { %>
                  <div>
                    <details class="m-0 mb-2">
                      <summary class="text-decoration-underline text-dark">
                        Return Request Initiated <i class="ms-2 fa-duotone fa-solid fa-circle-info fa-lg" style="--fa-primary-color: #000000; --fa-secondary-color: #ffd500; --fa-secondary-opacity: 1;"></i>
                      </summary>
                      <div class="tooltip-content">
                        REASON: <%= product.reasonForReturn %>
                      </div>
                    </details>
                  </div>
                  <button class="mt-2 btn btn-danger btn-sm text-black reject-modal-btn" data-index="<%= index %>" data-order-id="<%= order._id %>" data-mdb-modal-init data-mdb-target="#cancel-modal" type="button">reject</button>
                  <button class="ms-2 btn btn-success btn-sm allow-return" data-order-id="<%= order._id %>" data-index="<%= index %>">allow</button>
                  <% } else if (product.status === 'Delivered') { %>
                  <p class="text-muted mt-4 mb-0"> Delivered on <span class="text-body fw-bold"><%= new Date(product.deliveryDate).toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' }) %></span> </p>
                  <% if (product.reasonForRejection) { %>
                  <details class="m-0 mt-2">
                    <summary class="text-decoration-underline text-dark">
                      Return Request Rejected <i class="ms-2 fa-duotone fa-solid fa-circle-info fa-lg" style="--fa-primary-color: #000000; --fa-secondary-color: #ffd500; --fa-secondary-opacity: 1;"></i>
                    </summary>
                    <div class="tooltip-content">
                      REASON: <%= product.reasonForRejection %>
                    </div>
                  </details>
                  <% } %>
                  <% } else if (product.status === 'Returned') { %>
                  <p class="text-muted mt-4 mb-0"> Returned on <span class="text-body fw-bold"><%= new Date(product.returnedDate).toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' }) %></span> </p>
                  <small class="text-warning">REASON: <%= product.reasonForReturn %></small>
                  <% } else if (product.status === 'Cancelled') { %>
                  <small class="text-danger">CANCELLATION REASON: <%= product.reasonForCancel %></small>
                  <% } else if (product.status !== 'Delivered') { %>
                  <p class="text-decoration-underline mt-2">Change Status</p>
                  <% } %>
                  <% if (product.status === 'Confirmed') { %> 
                  <button class="btn btn-info btn-sm item-shipped" data-order-id="<%= order._id %>" data-index="<%= index %>">shipped</button>
                  <% } else if (product.status === 'Shipped') { %>
                  <button class="btn btn-success btn-sm item-delivered" data-order-id="<%= order._id %>" data-index="<%= index %>">Delivered</button>
                  <% } %>
                </div>
                <!-- Image -->
                <div class="col-2">
                  <div class="bg-image hover-overlay hover-zoom ripple rounded" data-mdb-ripple-color="light">
                    <img src="<%= product.productImage %>" class="w-100 img-fluid" alt="" width="120" />
                  </div>
                </div>
                <!-- Image -->
              </div>
              <div class="text-center pb-4">
                <p class="text-decoration-underline mb-0"">Current Status</p>
                <h6 class=" text-uppercase mt-3 mb-1 badge fs-6 <% if (product.status === 'Pending') { %> badge-secondary <% } else if (product.status === 'Confirmed') { %> badge-primary <% } else if (product.status === 'Shipped') { %> badge-info <% } else if (product.status === 'Delivered') { %> badge-success <% } else if (product.status === 'Pending-Return') { %> badge-secondary <% } else if (product.status === 'Returned') { %> badge-warning <% } else if (product.status === 'Cancelled') { %> badge-danger <% } %>">
                  <% if (product.status === 'Pending') { %>
                  <%= product.status %>
                  <% } else if (product.status === 'Confirmed') { %>
                  <%= product.status %>
                  <% } else if (product.status === 'Shipped') { %>
                  <%= product.status %>
                  <% } else if (product.status === 'Delivered') { %>
                  <%= product.status %>
                  <% } else if (product.status === 'Pending-Return') { %>
                  <%= product.status %>
                  <% } else if (product.status === 'Returned') { %>
                  <%= product.status %>
                  <% } else if (product.status === 'Cancelled') { %>
                  <%= product.status %>
                  <% } %>
                  </h6>
              </div>
              <% if (index !== array.length - 1) { %>
              <div class="mb-4 p-0 card-header"></div>
              <% } %>
              <% }) %>
            </div>
            <div class="card-footer">
              <h4 class="mb-3 mt-2"> ₹ <%= order.totalPrice.toLocaleString() %> <span class="small text-muted"> via <%= order.paymentMethod %> </span></h4>
              <h4 class="h5"><span class="small text-muted">Total Savings :</span> ₹ <%= order.totalPrice < totalPriceWithoutDiscount ? (totalPriceWithoutDiscount - order.totalPrice).toLocaleString() : '0' %></h4>
            </div>
            <div class="card-footer p-4">
              <h1 class="h5 mb-3">Billing Address</h1>
              <p class="m-0"><%= order.address.contactName + ', ' + order.address.house + ', ' + order.address.area + ', ' + order.address.city + ', ' + order.address.state + ', ' + 'Pin: ' + order.address.pincode + ', ' + 'Phone: ' + order.address.phone %></p>
            </div>
          </div>
          <% totalPriceWithoutDiscount = 0 %>
        </div>
      </div>
    </div>
  </section>
  <!-- ----------------------------------------------------------------------- -->
</div>
<!-- ----------------------------------------------------------------------- -->

<!-- -------------------- modal for return rejection --------------------- -->
<div class="modal fade" id="return-reject-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Reject Return</h5>
        <button type="button" class="btn-close" data-mdb-ripple-init data-mdb-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <select id="reject-reason" data-mdb-select-init class="form-control select">
          <option value="" selected disabled>Choose Reject Reason</option>
          <option>Product is damaged or used</option>
          <option>Return policy does not cover the product</option>
          <option>Missing or incomplete packaging</option>
          <option>Receipt or proof of purchase not provided</option>
        </select>
        <small id="reject-alert" class="text-danger"></small>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary ms-auto shadow-0" data-mdb-ripple-init data-mdb-dismiss="modal">Close</button>
        <button type="button" id="apply-reject" class="btn btn-success me-auto shadow-0" data-mdb-ripple-init>Apply</button>
      </div>
    </div>
  </div>
</div>
<!-- ----------------------------------------------------------------------- -->

<!-- --------------------------- footer included --------------------------- -->
<%- include('footer') %>
<!-- ----------------------------------------------------------------------- -->

<!-- ----------------------------- javaScript ------------------------------ -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // for updating order status to shipped
    document.querySelectorAll('.item-shipped').forEach(ele => {
      ele.addEventListener('click', function() {
        const productIndex = ele.getAttribute('data-index');
        const orderID = ele.getAttribute('data-order-id');

        Swal.fire({
          title: "Are you sure?",
          icon: "question",
          showCancelButton: true,
          confirmButtonText: "Yes",
          allowOutsideClick: false,
          customClass: {
            container: 'swal-css'
          }
        }).then((result) => {
          if (result.isConfirmed) {
            fetch(`/admin/edit-order-status?orderStatus=0&productIndex=${productIndex}&orderID=${orderID}`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                }
              }).then(response => response.json())
              .then(data => {
                if (data.error) {
                  console.log(data.error);
                }

                if (data.success) {
                  window.location.reload();
                }
              })
          }
        })
      });
    })

    // for updating order status to delivered
    document.querySelectorAll('.item-delivered').forEach(ele => {
      ele.addEventListener('click', function() {
        const productIndex = ele.getAttribute('data-index');
        const orderID = ele.getAttribute('data-order-id');

        Swal.fire({
          title: "Are you sure?",
          icon: "question",
          showCancelButton: true,
          confirmButtonText: "Yes",
          allowOutsideClick: false,
          customClass: {
            container: 'swal-css'
          }
        }).then((result) => {
          if (result.isConfirmed) {
            fetch(`/admin/edit-order-status?orderStatus=1&productIndex=${productIndex}&orderID=${orderID}`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                }
              }).then(response => response.json())
              .then(data => {
                if (data.error) {
                  console.log(data.error);
                }

                if (data.success) {
                  window.location.reload();
                }
              })
          }
        })
      });
    })

    // Modal Initialization
    const returnRejectModal = document.getElementById('return-reject-modal');
    let rejectModalInstance = mdb.Modal.getInstance(returnRejectModal);
    let productIndex;
    let orderID;

    // If no instance exists, create a new one
    if (!rejectModalInstance) {
      rejectModalInstance = new mdb.Modal(returnRejectModal);
    }

    // Open modal on button click
    document.querySelectorAll('.reject-modal-btn').forEach(ele => {
      ele.addEventListener('click', function() {
        productIndex = ele.getAttribute('data-index');
        orderID = ele.getAttribute('data-order-id');

        rejectModalInstance.show();
      });
    });

    // will reject return request using fetch
    document.querySelector('body').addEventListener('click', function(event) {
      const target = event.target;
      const rejectReason = document.querySelector('#reject-reason').value;
      const rejectAlert = document.querySelector('#reject-alert');

      if (target.id === 'apply-reject' && rejectReason) {
        fetch(`/admin/reject-return?orderID=${orderID}&productIndex=${productIndex}&rejectReason=${rejectReason}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          }).then(response => response.json())
          .then(data => {
            if (data.error) {
              Swal.fire({
                title: 'Error!',
                text: 'Something went wrong. Try again',
                icon: 'error',
                confirmButtonText: 'OK',
                allowOutsideClick: false,
                customClass: {
                  container: 'swal-css'
                }
              });
            }

            if (data.success) {
              window.location.reload();
            }
          }).catch(err => {
            console.log(err);
          })
      } else if (target.id === 'apply-reject' && !rejectReason) {
        rejectAlert.style.display = 'inline';
        rejectAlert.innerHTML = 'Please select an option';
      }
    })

    // for updating order status to returned
    document.querySelectorAll('.allow-return').forEach(ele => {
      ele.addEventListener('click', function() {
        const productIndex = ele.getAttribute('data-index');
        const orderID = ele.getAttribute('data-order-id');

        Swal.fire({
          title: "Are you sure?",
          icon: "question",
          showCancelButton: true,
          confirmButtonText: "Yes",
          allowOutsideClick: false,
          customClass: {
            container: 'swal-css'
          }
        }).then((result) => {
          if (result.isConfirmed) {
            fetch(`/admin/edit-order-status?orderStatus=2&productIndex=${productIndex}&orderID=${orderID}`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                }
              }).then(response => response.json())
              .then(data => {
                if (data.error) {
                  console.log(data.error);
                }

                if (data.success) {
                  window.location.reload();
                }
              })
          }
        })
      });
    })
  });
</script>
<!-- ----------------------------------------------------------------------- -->